drop table if exists customers;
drop table if exists orders;


create table customers (
    customer_id int primary key,
    customer_name varchar(100),
    city varchar(100),
    grade int,
    salesman_id int
);

create table orders (
    ord_no int primary key,
    purch_amt decimal(10, 2),
    ord_date date,
    customer_id int,
    salesman_id int,
    foreign key (customer_id) references customers(customer_id)
);

insert into customers
values
(3002, 'nick rimando', 'new york', 100, 5001),
(3005, 'graham zusi', 'california', 200, 5002),
(3001, 'brad guzan', 'london', 100, 5005),
(3004, 'fabian johns', 'paris', 300, 5006),
(3007, 'brad davis', 'new york', 200, 5001),
(3009, 'geoff camero', 'berlin', 100, 5003),
(3008, 'julian green', 'london', 300, 5002);

insert into orders
values
(70001, 150.5, '2012-10-05', 3005, 5002),
(70009, 270.65, '2012-09-10', 3001, 5005),
(70002, 65.26, '2012-10-05', 3002, 5001),
(70004, 110.5, '2012-08-17', 3009, 5003),
(70007, 948.5, '2012-09-10', 3005, 5002),
(70005, 2400.6, '2012-07-27', 3007, 5001),
(70008, 5760.0, '2012-09-10', 3002, 5001);

select sum(purch_amt) as total_purchase_amount from orders;

select avg(purch_amt) as average_purchase_amount from orders;

select count(customer_name) as customers_with_names from customers where customer_name is not null;

select min(purch_amt) as minimum_purchase_amount from orders;

select * from customers where customer_name like '%b';

select * from orders
join customers on orders.customer_id = customers.customer_id
where customers.city = 'new york';

select * from customers
where customer_id in (select customer_id from orders where purch_amt > 10);

select sum(grade) as total_grade from customers;

select * from customers where customer_name is not null;

select max(grade) as maximum_grade from customers;
